{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADFDemoSF"
		},
		"AzureSqlDatabase1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase1'"
		},
		"Snowflake1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Snowflake1'"
		},
		"AzureBlobStorage1_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'AzureBlobStorage1'"
		},
		"AzureSqlDatabase1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "saturuttu.database.windows.net"
		},
		"AzureSqlDatabase1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "ADFdemo"
		},
		"AzureSqlDatabase1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "satu"
		},
		"Snowflake1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "ADFDEMO"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('AzureBlobStorage1_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase1_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Snowflake1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SnowflakeV2",
				"typeProperties": {
					"authenticationType": "Basic",
					"accountIdentifier": "feinncr-es17355",
					"user": "ajaycsj",
					"database": "[parameters('Snowflake1_properties_typeProperties_database')]",
					"warehouse": "ADFDEMO",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Snowflake1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQL_Customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "CompanyName",
						"type": "nvarchar"
					},
					{
						"name": "SalesPerson",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "PasswordHash",
						"type": "varchar"
					},
					{
						"name": "PasswordSalt",
						"type": "varchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Customer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQL_Product')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "ProductNumber",
						"type": "nvarchar"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ListPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "Weight",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "ProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductModelID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SellStartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SellEndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DiscontinuedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ThumbNailPhoto",
						"type": "varbinary"
					},
					{
						"name": "ThumbnailPhotoFileName",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Product"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQL_ProductCategory')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ParentProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "ProductCategory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQL_SalesOrderDetail')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesOrderDetailID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderQty",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UnitPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "UnitPriceDiscount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "LineTotal",
						"type": "decimal",
						"precision": 38,
						"scale": 6
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "SalesOrderDetail"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQL_SalesOrderHeader')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RevisionNumber",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DueDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ShipDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Status",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "OnlineOrderFlag",
						"type": "bit"
					},
					{
						"name": "SalesOrderNumber",
						"type": "nvarchar"
					},
					{
						"name": "PurchaseOrderNumber",
						"type": "nvarchar"
					},
					{
						"name": "AccountNumber",
						"type": "nvarchar"
					},
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ShipToAddressID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BillToAddressID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ShipMethod",
						"type": "nvarchar"
					},
					{
						"name": "CreditCardApprovalCode",
						"type": "varchar"
					},
					{
						"name": "SubTotal",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TaxAmt",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TotalDue",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Comment",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "SalesOrderHeader"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Snowflake_Customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [
					{
						"name": "CUSTOMERID",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "NAMESTYLE",
						"type": "VARCHAR"
					},
					{
						"name": "TITLE",
						"type": "VARCHAR"
					},
					{
						"name": "FIRSTNAME",
						"type": "VARCHAR"
					},
					{
						"name": "MIDDLENAME",
						"type": "VARCHAR"
					},
					{
						"name": "LASTNAME",
						"type": "VARCHAR"
					},
					{
						"name": "SUFFIX",
						"type": "VARCHAR"
					},
					{
						"name": "COMPANYNAME",
						"type": "VARCHAR"
					},
					{
						"name": "SALESPERSON",
						"type": "VARCHAR"
					},
					{
						"name": "EMAILADDRESS",
						"type": "VARCHAR"
					},
					{
						"name": "PHONE",
						"type": "VARCHAR"
					},
					{
						"name": "PASSWORDHASH",
						"type": "VARCHAR"
					},
					{
						"name": "PASSWORDSALT",
						"type": "VARCHAR"
					},
					{
						"name": "ROWGUID",
						"type": "VARCHAR"
					},
					{
						"name": "MODIFIEDDATE",
						"type": "TIMESTAMP_NTZ"
					}
				],
				"typeProperties": {
					"schema": "RAW",
					"table": "CUSTOMER"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Snowflake_Product')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [
					{
						"name": "CUSTOMERID",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "NAMESTYLE",
						"type": "VARCHAR"
					},
					{
						"name": "TITLE",
						"type": "VARCHAR"
					},
					{
						"name": "FIRSTNAME",
						"type": "VARCHAR"
					},
					{
						"name": "MIDDLENAME",
						"type": "VARCHAR"
					},
					{
						"name": "LASTNAME",
						"type": "VARCHAR"
					},
					{
						"name": "SUFFIX",
						"type": "VARCHAR"
					},
					{
						"name": "COMPANYNAME",
						"type": "VARCHAR"
					},
					{
						"name": "SALESPERSON",
						"type": "VARCHAR"
					},
					{
						"name": "EMAILADDRESS",
						"type": "VARCHAR"
					},
					{
						"name": "PHONE",
						"type": "VARCHAR"
					},
					{
						"name": "PASSWORDHASH",
						"type": "VARCHAR"
					},
					{
						"name": "PASSWORDSALT",
						"type": "VARCHAR"
					},
					{
						"name": "ROWGUID",
						"type": "VARCHAR"
					},
					{
						"name": "MODIFIEDDATE",
						"type": "TIMESTAMP_NTZ"
					}
				],
				"typeProperties": {
					"schema": "RAW",
					"table": "PRODUCT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Snowflake_ProductCategory')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [
					{
						"name": "PRODUCTCATEGORYID",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "PARENTPRODUCTCATEGORYID",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "NAME",
						"type": "VARCHAR"
					},
					{
						"name": "ROWGUID",
						"type": "VARCHAR"
					},
					{
						"name": "MODIFIEDDATE",
						"type": "TIMESTAMP_NTZ"
					}
				],
				"typeProperties": {
					"schema": "RAW",
					"table": "PRODUCTCATEGORY"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Snowflake_SalesOrder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [
					{
						"name": "SALESORDERID",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "SALESORDERDETAILID",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "ORDERQTY",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "PRODUCTID",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "UNITPRICE",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "UNITPRICEDISCOUNT",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "LINETOTAL",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "ROWGUID",
						"type": "VARCHAR"
					},
					{
						"name": "MODIFIEDDATE",
						"type": "TIMESTAMP_NTZ"
					},
					{
						"name": "REVISIONNUMBER",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "ORDERDATE",
						"type": "TIMESTAMP_NTZ"
					},
					{
						"name": "DUEDATE",
						"type": "TIMESTAMP_NTZ"
					},
					{
						"name": "SHIPDATE",
						"type": "TIMESTAMP_NTZ"
					},
					{
						"name": "STATUS",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "SALESORDERNUMBER",
						"type": "VARCHAR"
					},
					{
						"name": "PURCHASEORDERNUMBER",
						"type": "VARCHAR"
					},
					{
						"name": "ACCOUNTNUMBER",
						"type": "VARCHAR"
					},
					{
						"name": "CUSTOMERID",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "SHIPTOADDRESSID",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "BILLTOADDRESSID",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "SHIPMETHOD",
						"type": "VARCHAR"
					},
					{
						"name": "CREDITCARDAPPROVALCODE",
						"type": "VARCHAR"
					},
					{
						"name": "SUBTOTAL",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "TAXAMT",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "FREIGHT",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "TOTALDUE",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "COMMENT",
						"type": "VARCHAR"
					}
				],
				"typeProperties": {
					"schema": "RAW",
					"table": "SALESORDER"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesOrder DataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSQL_SalesOrderHeader",
								"type": "DatasetReference"
							},
							"name": "SalesOrderHeader"
						},
						{
							"dataset": {
								"referenceName": "AzureSQL_SalesOrderDetail",
								"type": "DatasetReference"
							},
							"name": "SalesOrderDetail"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Snowflake_SalesOrder",
								"type": "DatasetReference"
							},
							"name": "Snowflake"
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "selectskipduplicate"
						}
					],
					"scriptLines": [
						"source(output(",
						"          SalesOrderID as integer,",
						"          RevisionNumber as integer,",
						"          OrderDate as timestamp,",
						"          DueDate as timestamp,",
						"          ShipDate as timestamp,",
						"          Status as integer,",
						"          OnlineOrderFlag as boolean,",
						"          SalesOrderNumber as string,",
						"          PurchaseOrderNumber as string,",
						"          AccountNumber as string,",
						"          CustomerID as integer,",
						"          ShipToAddressID as integer,",
						"          BillToAddressID as integer,",
						"          ShipMethod as string,",
						"          CreditCardApprovalCode as string,",
						"          SubTotal as decimal(19,4),",
						"          TaxAmt as decimal(19,4),",
						"          Freight as decimal(19,4),",
						"          TotalDue as decimal(19,4),",
						"          Comment as string,",
						"          rowguid as string,",
						"          ModifiedDate as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> SalesOrderHeader",
						"source(output(",
						"          SalesOrderID as integer,",
						"          SalesOrderDetailID as integer,",
						"          OrderQty as short,",
						"          ProductID as integer,",
						"          UnitPrice as decimal(19,4),",
						"          UnitPriceDiscount as decimal(19,4),",
						"          LineTotal as decimal(38,6),",
						"          rowguid as string,",
						"          ModifiedDate as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> SalesOrderDetail",
						"SalesOrderHeader, SalesOrderDetail join(SalesOrderHeader@SalesOrderID == SalesOrderDetail@SalesOrderID,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 select(mapColumn(",
						"          SalesOrderID = SalesOrderHeader@SalesOrderID,",
						"          RevisionNumber,",
						"          OrderDate,",
						"          DueDate,",
						"          ShipDate,",
						"          Status,",
						"          OnlineOrderFlag,",
						"          SalesOrderNumber,",
						"          PurchaseOrderNumber,",
						"          AccountNumber,",
						"          CustomerID,",
						"          ShipToAddressID,",
						"          BillToAddressID,",
						"          ShipMethod,",
						"          CreditCardApprovalCode,",
						"          SubTotal,",
						"          TaxAmt,",
						"          Freight,",
						"          TotalDue,",
						"          Comment,",
						"          rowguid = SalesOrderHeader@rowguid,",
						"          ModifiedDate = SalesOrderHeader@ModifiedDate,",
						"          SalesOrderID = SalesOrderDetail@SalesOrderID,",
						"          SalesOrderDetailID,",
						"          OrderQty,",
						"          ProductID,",
						"          UnitPrice,",
						"          UnitPriceDiscount,",
						"          LineTotal,",
						"          rowguid = SalesOrderDetail@rowguid,",
						"          ModifiedDate = SalesOrderDetail@ModifiedDate",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectskipduplicate",
						"selectskipduplicate sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          SALESORDERID as string,",
						"          SALESORDERDETAILID as string,",
						"          ORDERQTY as string,",
						"          PRODUCTID as string,",
						"          UNITPRICE as string,",
						"          UNITPRICEDISCOUNT as string,",
						"          LINETOTAL as string,",
						"          ROWGUID as string,",
						"          MODIFIEDDATE as string,",
						"          REVISIONNUMBER as string,",
						"          ORDERDATE as string,",
						"          DUEDATE as string,",
						"          SHIPDATE as string,",
						"          STATUS as string,",
						"          SALESORDERNUMBER as string,",
						"          PURCHASEORDERNUMBER as string,",
						"          ACCOUNTNUMBER as string,",
						"          CUSTOMERID as string,",
						"          SHIPTOADDRESSID as string,",
						"          BILLTOADDRESSID as string,",
						"          SHIPMETHOD as string,",
						"          CREDITCARDAPPROVALCODE as string,",
						"          SUBTOTAL as string,",
						"          TAXAMT as string,",
						"          FREIGHT as string,",
						"          TOTALDUE as string,",
						"          COMMENT as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     stageInsert: true,",
						"     mapColumn(",
						"          SALESORDERID = SalesOrderID,",
						"          SALESORDERDETAILID = SalesOrderDetailID,",
						"          ORDERQTY = OrderQty,",
						"          PRODUCTID = ProductID,",
						"          UNITPRICE = UnitPrice,",
						"          UNITPRICEDISCOUNT = UnitPriceDiscount,",
						"          LINETOTAL = LineTotal,",
						"          ROWGUID = rowguid,",
						"          MODIFIEDDATE = ModifiedDate,",
						"          REVISIONNUMBER = RevisionNumber,",
						"          ORDERDATE = OrderDate,",
						"          DUEDATE = DueDate,",
						"          SHIPDATE = ShipDate,",
						"          STATUS = Status,",
						"          SALESORDERNUMBER = SalesOrderNumber,",
						"          PURCHASEORDERNUMBER = PurchaseOrderNumber,",
						"          ACCOUNTNUMBER = AccountNumber,",
						"          CUSTOMERID = CustomerID,",
						"          SHIPTOADDRESSID = ShipToAddressID,",
						"          BILLTOADDRESSID = BillToAddressID,",
						"          SHIPMETHOD = ShipMethod,",
						"          CREDITCARDAPPROVALCODE = CreditCardApprovalCode,",
						"          SUBTOTAL = SubTotal,",
						"          TAXAMT = TaxAmt,",
						"          FREIGHT = Freight,",
						"          TOTALDUE = TotalDue,",
						"          COMMENT = Comment",
						"     )) ~> Snowflake"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSQL_SalesOrderHeader')]",
				"[concat(variables('factoryId'), '/datasets/AzureSQL_SalesOrderDetail')]",
				"[concat(variables('factoryId'), '/datasets/Snowflake_SalesOrder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADFDemopipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Product",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "Truncate table Raw.Product",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSQL_Product",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Snowflake_Product",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Customer",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "Truncate table Raw.Customer",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSQL_Customer",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Snowflake_Customer",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ProductCategory",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"preCopyScript": "Truncate table Raw.ProductCategory",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSQL_ProductCategory",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Snowflake_ProductCategory",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SalesOrders",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "ProductCategory",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Product",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Customer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SalesOrder DataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SalesOrderHeader": {},
									"SalesOrderDetail": {},
									"Snowflake": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Update CustomerOrders",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "SalesOrders",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "Snowflake1",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "CALL Analytics.InsertCustomerOrders();"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSQL_Product')]",
				"[concat(variables('factoryId'), '/datasets/Snowflake_Product')]",
				"[concat(variables('factoryId'), '/datasets/AzureSQL_Customer')]",
				"[concat(variables('factoryId'), '/datasets/Snowflake_Customer')]",
				"[concat(variables('factoryId'), '/datasets/AzureSQL_ProductCategory')]",
				"[concat(variables('factoryId'), '/datasets/Snowflake_ProductCategory')]",
				"[concat(variables('factoryId'), '/dataflows/SalesOrder DataFlow')]",
				"[concat(variables('factoryId'), '/linkedServices/Snowflake1')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		}
	]
}